<?xml version="1.0" encoding="UTF-8"?>
<query>
	<history>
		<getAllHistoryCount>
			SELECT 		COUNT(HISTORY_ID)
			FROM 		OPER_HIST
			WHERE 		CRTD_DATE >= ?
			AND 		CRTD_DATE &lt;= ?
		</getAllHistoryCount>
		<getAllHistory>
			SELECT 		HISTORY_ID
						, IP
						, CRTD_DATE
						, URL
						, ACTION_CODE
						, DESCRIPTION
						, ETC
						, EMAIL
			FROM 		OPER_HIST
			WHERE 		CRTD_DATE >= ?
			AND 		CRTD_DATE &lt;= ?
		</getAllHistory>
	</history>
	
	<operationHistory>
		<insertHistory>
			INSERT INTO OPER_HIST	(
				   						HISTORY_ID
				   						, IP
				   						, CRTD_DATE
				   						, URL
				   						, ACTION_CODE
				   						, DESCRIPTION
				   						, ETC
				   						, EMAIL
			   						) 
			VALUES 					( 
										HISTORY_ID_SEQ.NEXTVAL
										, ?
										, SYSDATE
										, ?
										, ?
										, ?
										, ?
										, ?
									)		
		</insertHistory>
	</operationHistory>
	
	<prohibitedWord>
		<insertProhibitedWord>
			INSERT INTO		PROHIBITED_WORD (
			  									 PROHIBITED_WORD_ID
			  									 , PROHIBITED_WORD_NAME
			  								) 
			VALUES 							( 
												PROHIBITED_WORD_ID_SEQ.NEXTVAL
												, ?
											)
		</insertProhibitedWord>
	</prohibitedWord>
	<major>
		<deleteMajors2>
			DELETE
			FROM	MAJOR
			WHERE	MAJOR_ID = ?
		</deleteMajors2>
		<updateMajorName>
			UPDATE	MAJOR
			SET		MAJOR_NAME = ?
			WHERE	MAJOR_ID = ?
		</updateMajorName>
		<getMajorName>
			SELECT	MAJOR_NAME
			FROM	MAJOR
			WHERE 	MAJOR_ID = ?
		</getMajorName>
		<registerMajor>
			INSERT INTO		MAJOR		(
  													 MAJOR_ID
  													 , MAJOR_NAME
  													 , MAJOR_GROUP_ID
  										) 
			VALUES 						( 		
													 MAJOR_ID_SEQ.NEXTVAL
													, ?
													, ?
										)
		</registerMajor>
		<deleteMajors>
			DELETE
			FROM	MAJOR
			WHERE	MAJOR_GROUP_ID = ?
		</deleteMajors>
		<deleteMajorGroups>
			DELETE
			FROM	MAJOR_GROUP
			WHERE	MAJOR_GROUP_ID = ?
		</deleteMajorGroups>
		<getMajorGroupName>
			SELECT	MAJOR_GROUP_NAME
			FROM	MAJOR_GROUP
			WHERE	MAJOR_GROUP_ID = ?
		</getMajorGroupName>
		<updateMajorGroupName>
			UPDATE	MAJOR_GROUP
			SET		MAJOR_GROUP_NAME = ?
			WHERE	MAJOR_GROUP_ID = ?
		</updateMajorGroupName>
		<registerMajorGroup>
			INSERT INTO		MAJOR_GROUP (
  													 MAJOR_GROUP_ID
  													 , MAJOR_GROUP_NAME
  										) 
			VALUES 						( 		
													 MAJOR_GROUP_ID.NEXTVAL
													, ?
										)
		</registerMajorGroup>
		<getAllMajorCount>
			SELECT	COUNT(MAJOR_ID)
			FROM	MAJOR
			WHERE	MAJOR_GROUP_ID = ?
		</getAllMajorCount>
		<getAllMajor>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	MAJOR_ID
												, MAJOR_NAME
												, MAJOR_GROUP_ID
										FROM	MAJOR
										WHERE	MAJOR_GROUP_ID = ?
										ORDER	BY MAJOR_ID DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllMajor>
	</major>
	<majorGroup>
		<getAllMajorGroupCount>
			SELECT	COUNT(MAJOR_GROUP_ID)
			FROM	MAJOR_GROUP
		</getAllMajorGroupCount>
		<getAllMajorGroup>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	MAJOR_GROUP_ID
												, MAJOR_GROUP_NAME
										FROM	MAJOR_GROUP
										ORDER	BY MAJOR_GROUP_ID DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllMajorGroup>
	</majorGroup>

	<univ>
		<getAllUnivCount>
			SELECT	COUNT(UNIV_ID)
			FROM	UNIV
		</getAllUnivCount>
		<getAllUniv>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	UNIV_ID
												, UNIV_NAME
										FROM	UNIV
										ORDER	BY UNIV_ID DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllUniv>
		<deleteUniv>
			DELETE
			FROM	UNIV
			WHERE	UNIV_ID = ?
		</deleteUniv>
		<updateUnivName>
			UPDATE	UNIV
			SET		UNIV_NAME = ?
			WHERE	UNIV_ID = ?
		</updateUnivName>
		<registerUniv>
			INSERT INTO		UNIV (
  									 UNIV_ID
  									 , UNIV_NAME
  								) 
			VALUES 				( 
									UNIV_ID_SEQ.NEXTVAL
									, ?
								)
		</registerUniv>
		<getUnivName>
			SELECT	UNIV_NAME
			FROM	UNIV
			WHERE	UNIV_ID = ?
		</getUnivName>
	</univ>
	<survey>
		<insertSurveyStats>
				INSERT	INTO	SURVEY_STATS 	(
				   									SURVEY_STATS_ID
				   									, SURVEY_ID
				   									, FIRST_STATS
				   									, SECOND_STATS
				   									, THIRD_STATS
				   									, FOURTH_STATS
				   								) 
				VALUES 							(	
													SURVEY_STATS_ID_SEQ.NEXTVAL
													, ?
													, 0
													, 0
													, 0
													, 0
											    )
		</insertSurveyStats>
	
		<getSurveyId>
			SELECT	SURVEY_ID
			FROM	SURVEY
			WHERE	SURVEY_TITLE = ?
			AND		SURVEY_ANSWER1 = ?
			AND		SURVEY_ANSWER2 = ?
			AND		SURVEY_ANSWER3 = ?
			AND		SURVEY_ANSWER4 = ?
			AND		SURVEY_DATE = ?
		</getSurveyId>
		<deleteSurvey>
			DELETE 
			FROM   SURVEY
			WHERE  SURVEY_ID = ?
		</deleteSurvey>
		<modifySurvey>
			UPDATE	SURVEY
			SET		SURVEY_TITLE = ?
					, SURVEY_ANSWER1 = ?
					, SURVEY_ANSWER2 = ?
					, SURVEY_ANSWER3 = ?
					, SURVEY_ANSWER4 = ?
			WHERE	SURVEY_ID = ?
		</modifySurvey>
		<getSurveyInfoBySurveyId>
			SELECT	*
			FROM	SURVEY
			WHERE	SURVEY_ID = ?
		</getSurveyInfoBySurveyId>
		<getAllSurveyCount>
			SELECT	COUNT(SURVEY_ID)
			FROM 	SURVEY
		</getAllSurveyCount>
		<getAllSurvey>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	*
										FROM 	SURVEY
										ORDER	BY SURVEY_ID DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllSurvey>
		<insertSurvey>
			INSERT INTO		SURVEY (
	   									SURVEY_ID
	   									, SURVEY_TITLE
	   									, SURVEY_ANSWER1
	   									, SURVEY_ANSWER2
	   									, SURVEY_ANSWER3
	   									, SURVEY_ANSWER4
	   									, SURVEY_DATE
	   								) 
			VALUES 					(	
										SURVEY_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
										, ?
										, ?
										, ?
								    )
		</insertSurvey>
	</survey>
	
	<member>
		<modifyRankDate>
			UPDATE	MEMBER
			SET		RANK_MODIFY_DATE = ?
			WHERE	EMAIL = ?
		</modifyRankDate>
		<modifyMember>
			UPDATE	MEMBER
			SET		MEMBER_TYPE_ID = ?
					, POINT = ?
					, PASSWORD = ?
			WHERE	EMAIL = ?
		</modifyMember>
		<getMemberInfoByEmail>
		
			SELECT	*
			FROM	MEMBER
			WHERE	EMAIL = ?
		</getMemberInfoByEmail>
		
		<deleteMember>
			DELETE 
			FROM   MEMBER
			WHERE  EMAIL = ?
		</deleteMember>
	
		<getAllMemberCount>
			SELECT	COUNT(EMAIL)
			FROM 	MEMBER
		</getAllMemberCount>
	
		<getAllMember>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	*
										FROM 	MEMBER
										ORDER	BY EMAIL DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllMember>
		
		<getMemberByIdAndPassword>
			SELECT	*
			FROM	MEMBER
			WHERE	EMAIL = ?
			AND		PASSWORD = ?
		</getMemberByIdAndPassword>
		
		<registerMember>
			INSERT INTO 	MEMBERS (
   										MEMBER_ID
   										, NICK_NAME
										, PASSWORD
										, EMAIL
									) 
			VALUES					 ( 
										?
										, ?
										, ?
										, ? 
									)
		</registerMember>
	</member>
	
	<article>
		<getAllArticleCount>
			SELECT	COUNT(A.ARTICLE_ID)
			FROM 	ARTICLE A, MEMBER M
			WHERE   A.EMAIL = M.EMAIL
			AND		ARTICLE_REGISTER_DATE >= ?
			AND		ARTICLE_REGISTER_DATE &lt;= ?
		</getAllArticleCount>
		<getClaimArticleInfoByArticleId>
			SELECT	*
			FROM	ARTICLE
			WHERE	ARTICLE_ID = ?
		
		</getClaimArticleInfoByArticleId>
		<getArticleInfoByArticleId>
			SELECT	*
			FROM	ARTICLE
			WHERE	ARTICLE_ID = ?
		</getArticleInfoByArticleId>
		<getClaimArticleCountByArticleId>
			SELECT	COUNT(ARTICLE_ID)
			FROM	ARTICLE_CLAIM
			WHERE	ARTICLE_ID = ?			
		</getClaimArticleCountByArticleId>
	
		<getAllClaimArticleCount>
			SELECT	COUNT(ARTICLE_CLAIM_ID)
			FROM	ARTICLE_CLAIM
		</getAllClaimArticleCount>
	
		<getAllClaimArticle>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	*
										FROM 	ARTICLE_CLAIM
										ORDER	BY CLAIM_DATE DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllClaimArticle>
	
		<getAllArticle>
			SELECT	*
			FROM	(
						SELECT	ROWNUM AS RNUM
								, AB.*
						FROM	(
										SELECT	A.ARTICLE_ID
                                                , A.ARTICLE_TITLE
                                                , A.ARTICLE_DESC
                                                , A.ARTICLE_REGISTER_DATE
                                                , A.ARTICLE_MODIFY_DATE
                                                , A.ARTICLE_TYPE_ID
                                                , A.EMAIL
                                                , A.BOARD_ID
                                                , A.MAJOR_GROUP_ID
                                                , A.UNIV_ID
                                                , A.HITS
                                                , A.ARTICLE_LIKES
                                                , A.ARTICLE_DISLIKES
                                                , A.ARTICLE_SCRAB
										FROM 	ARTICLE A
										WHERE   A.ARTICLE_REGISTER_DATE >= ?
										AND		A.ARTICLE_REGISTER_DATE &lt; ?
										OR		A.ARTICLE_REGISTER_DATE LIKE TO_DATE(?,	'YYYY-MM-DD')
										ORDER	BY A.ARTICLE_ID DESC
								) AB
						WHERE	ROWNUM &lt;= ?
					)
			WHERE	RNUM >= ?
		</getAllArticle>
		<showDetail>
			SELECT		ARTICLE_ID
						, TITLE
	       		 		, NICK_NAME
	       		 		, M.MEMBER_ID
	       		 		, DESCRIPT
	        			, HITS
	        			, RECOMMENDS
			FROM    	ARTICLE A
	        			, MEMBERS M
			WHERE   	A.MEMBER_ID = M.MEMBER_ID
			AND			ARTICLE_ID = ?
		</showDetail>
		
		<addHit>
			UPDATE	ARTICLE
			SET		HITS = HITS + 1
			WHERE	ARTICLE_ID = ?
		</addHit>
		
		<addRecommend>
			UPDATE	ARTICLE
			SET		RECOMMENDS = RECOMMENDS + 1
			WHERE	ARTICLE_ID = ?
		</addRecommend>
		
		<doWrite>
			INSERT INTO		ARTICLE (
	   									ARTICLE_ID
	   									, MEMBER_ID
	   									, TITLE
	   									, DESCRIPT
	   								) 
			VALUES 					(	
										ARTICLE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
								    )
 		</doWrite>
 		
 		<updateArticleOnlyTitle>
			UPDATE	ARTICLE
			SET		TITLE = ?
			WHERE	ARTICLE_ID = ?
		</updateArticleOnlyTitle>
		
		<updateArticleOnlyDescription>
			UPDATE	ARTICLE
			SET		DESCRIPT = ?
			WHERE	ARTICLE_ID = ?
		</updateArticleOnlyDescription>
		
		<updateArticle>
			UPDATE	ARTICLE
			SET		TITLE = ?
					, DESCRIPT = ?
			WHERE	ARTICLE_ID = ?
		</updateArticle>
		<latestArticleNo>
			SELECT	ARTICLE_ID_SEQ.CURRVAL
			FROM	DUAL
		</latestArticleNo>
		<deleteArticle>
			DELETE
			FROM	ARTICLE
			WHERE	ARTICLE_ID = ?
		</deleteArticle>
	</article>
	<file>
		<doWriteFile>
				INSERT INTO 	FILES (
	   									FILE_ID
	   									, ARTICLE_ID
	   									, FILE_NAME
	   									, FILE_LOCATION
	   								   ) 
				VALUES 				  ( 
										FILE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
	 								   )
	 	</doWriteFile>
	 	<showDetail>
	 		SELECT		FILE_ID
	 					, ARTICLE_ID
	 					, FILE_NAME
	 					, FILE_LOCATION
			FROM 		FILES
			WHERE		ARTICLE_ID = ?
	 	</showDetail>
	 	<deleteFile>
	 		DELETE
			FROM	FILES
			WHERE	ARTICLE_ID = ?
	 	</deleteFile>
	</file>

	<reply>
		<getClaimReplyInfoByReplyId>
			SELECT	*
			FROM	REPLY
			WHERE	REPLY_ID = ?
		</getClaimReplyInfoByReplyId>
		
		<getAllClaimReplyCountByReplyId>
			SELECT	COUNT(REPLY_ID)
			FROM	ARTICLE_CLAIM
			WHERE	REPLY_ID = ?			
		</getAllClaimReplyCountByReplyId>
	</reply>
	
	<question>

		<getAllQuestionCount>
			SELECT	COUNT(QUESTION_ID)
			FROM	QA
			WHERE	QUESTION_TITLE LIKE '%' || ? || '%'
			OR		QUESTION_DESCRIPTION LIKE '%' || ? || '%'
		</getAllQuestionCount>
		
		<getAllQuestionCountByEmail>
			SELECT	COUNT(QUESTION_ID)
			FROM	QA
			WHERE	EMAIL LIKE '%' || ? || '%'
		</getAllQuestionCountByEmail>
		
		<getAllQuestionCountByIsCheck>
			SELECT	COUNT(QUESTION_ID)
			FROM	QA
			WHERE	IS_CHECKED LIKE '%' || ? || '%'
		</getAllQuestionCountByIsCheck>
		
		<getQuestions>
			SELECT *
			FROM   (
						SELECT ROWNUM AS RNUM
						       , A.*
						FROM   (
			            			SELECT  *
									FROM	QA
									WHERE	QUESTION_TITLE LIKE '%' || ? || '%'
									OR		QUESTION_DESCRIPTION LIKE '%' || ? || '%'
									ORDER   BY ANSWER_DATE DESC
											, QUESTION_DATE 
						       ) A
						WHERE  ROWNUM &lt;= ?
				   )
			WHERE  RNUM >= ?
		</getQuestions>
		
		<getQuestionsByEmail>
			SELECT *
			FROM   (
						SELECT ROWNUM AS RNUM
						       , A.*
						FROM   (
			            			SELECT  *
									FROM	QA
									WHERE	EMAIL LIKE '%' || ? || '%'
									ORDER   BY ANSWER_DATE DESC
											, QUESTION_DATE DESC 
						       ) A
						WHERE  ROWNUM &lt;= ?
				   )
			WHERE  RNUM &gt;= ?
		</getQuestionsByEmail>
		
		<getQuestionsByIsCheck>
			SELECT *
			FROM   (
						SELECT ROWNUM AS RNUM
						       , A.*
						FROM   (
			            			SELECT  *
									FROM	QA
									WHERE	IS_CHECKED = ?
									ORDER   BY ANSWER_DATE DESC
											, QUESTION_DATE DESC 
						       ) A
						WHERE  ROWNUM &lt;= ?
				   )
			WHERE  RNUM &gt;= ?
		</getQuestionsByIsCheck>
		
		<getQuestionByQuestionId>
			SELECT	*
			FROM	QA
			WHERE	QUESTION_ID = ?
		</getQuestionByQuestionId>
		
		<addNewAnswer>
			UPDATE	CURTAIN.QA
			SET		ANSWER_DESCRIPTION = ?
					, ANSWER_DATE = SYSDATE
			WHERE	QUESTION_ID = ?
		</addNewAnswer>
	</question>

</query>