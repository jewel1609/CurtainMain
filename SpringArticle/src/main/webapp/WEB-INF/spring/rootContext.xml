<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
		<property name="username" value="HR" />
		<property name="password" value="hr" />
	</bean>
	
	<!-- MyBatis가 사용할 Database에 연결하도록 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 
			패키지의 최상위 폴더 즉 현재는 src/main/java, src/main/resources
			, src/test/java, src/test/resources 4개로 구성되어있다.
			이게 현재는 4개로 되어있지만 나중에는 하나로 바뀐다.
		 -->
		<property name="configLocation" value="classpath:/mybatis.xml"></property>
	</bean>
	
	<!-- MyBatis의 CRUD 템플릿을 사용할 수 있도록 설정 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- Transaction 설정하기 -->
	<!-- Transaction Manager 설정 commit, rollback -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Transaction 대상 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="tx*" rollback-for="RuntimeException"/>
		
			<tx:method name="insert*" rollback-for="RuntimeException"/>
			<tx:method name="write*" rollback-for="RuntimeException"/>
			<tx:method name="add*" rollback-for="RuntimeException"/>
			<tx:method name="create*" rollback-for="RuntimeException"/>
			<tx:method name="regist*" rollback-for="RuntimeException"/>
			<tx:method name="regist*" rollback-for="RuntimeException"/>
	
			<tx:method name="update*" rollback-for="RuntimeException"/>
			<tx:method name="modify*" rollback-for="RuntimeException"/>
			<tx:method name="edit*" rollback-for="RuntimeException"/>
			<tx:method name="change*" rollback-for="RuntimeException"/>
			
			<tx:method name="delete*" rollback-for="RuntimeException"/>
			<tx:method name="remove*" rollback-for="RuntimeException"/>
			<tx:method name="terminate*" rollback-for="RuntimeException"/>
			
			<tx:method name="read*" rollback-for="RuntimeException"/>
			<tx:method name="select*" rollback-for="RuntimeException"/>
			<tx:method name="get*" rollback-for="RuntimeException"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- AOP 누구한테 언제 갈껀지 -->
	<aop:config>
		<aop:pointcut expression="execution(public * com.ktds.curtain..web.*.*(..))" id="controllerTx"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="controllerTx"/>
	</aop:config>

</beans>
