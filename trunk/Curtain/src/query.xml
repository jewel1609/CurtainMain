<?xml version="1.0" encoding="UTF-8"?>

<query>
	<major>
		<getMajorGroupIdByMajorId>
			SELECT	MAJOR_GROUP_ID		
			FROM	MAJOR
			WHERE	MAJOR_ID = ?		
		</getMajorGroupIdByMajorId>
		<getMajorIdByMajorName>
			SELECT	MAJOR_ID		
			FROM	MAJOR
			WHERE	MAJOR_NAME = ? 
		</getMajorIdByMajorName>
		<checkMajorName>
			SELECT	MAJOR_ID
					, MAJOR_NAME
					, MAJOR_GROUP_ID					
			FROM	MAJOR
			WHERE	MAJOR_NAME LIKE '%' || ? || '%'		
		</checkMajorName>
	</major>
	<univ>
		<isExistStdUnivEmail>
			SELECT 	*
			FROM	MEMBER
			WHERE	EMAIL_ID = ?
		</isExistStdUnivEmail>
		<getUnivIdByUnivName>
			SELECT	UNIV_ID		
			FROM	UNIV
			WHERE	UNIV_NAME = ? 
		</getUnivIdByUnivName>
		<checkUnivName>
			SELECT	UNIV_ID
					, UNIV_NAME
			FROM	UNIV
			WHERE	UNIV_NAME LIKE '%' || ? || '%'			
		</checkUnivName>
	</univ>
	
	<dupl>
		<isExistNickName>
			SELECT 	COUNT(NICK_NAME)
			FROM	MEMBER
			WHERE	NICK_NAME = ?
		</isExistNickName>
	</dupl>
	<mac>
		<getMacDescByStudentEmail>
			SELECT 	MAC_ID
					, EMAIL
					, MAC_DESC
			FROM	MAC
			WHERE	EMAIL = ?					
		</getMacDescByStudentEmail>
		
		<addMacInfo>
			INSERT INTO MAC (
						  		MAC_ID
						  		, EMAIL
						  		, MAC_DESC
						  	) 
			VALUES 			( 
								MAC_ID_SEQ.NEXTVAL
								,?
								,? 
							)
		</addMacInfo>
	</mac>
	<article>
		<getArticleDislikes>
			SELECT  ARTICLE_DISLIKES
			FROM    ARTICLE
			WHERE   ARTICLE_ID = ?
		</getArticleDislikes>
		<minusLikeCount>
			UPDATE	ARTICLE
			SET		ARTICLE_LIKES = ARTICLE_LIKES - 1
			WHERE	ARTICLE_ID = ?
		</minusLikeCount>
		<plusLikeCount>
			UPDATE	ARTICLE
			SET		ARTICLE_LIKES = ARTICLE_LIKES + 1
			WHERE	ARTICLE_ID = ?
		</plusLikeCount>
		<getArticleLikes>
			SELECT	ARTICLE_LIKES
			FROM	ARTICLE
			WHERE	ARTICLE_ID = ?
		</getArticleLikes>

		<showMajorArticle>
        	SELECT		ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
						, ARTICLE_DISLIKES
			FROM 		ARTICLE A
						, MEMBER SM
						, ARTICLE_TYPE AT
			WHERE	    A.EMAIL = SM.EMAIL
			AND         A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND         A.BOARD_ID = 1
			AND         A.MAJOR_GROUP_ID = ?
			ORDER		BY	A.ARTICLE_ID DESC
		</showMajorArticle>

		<showUnivArticle>
			SELECT		ARTICLE_ID
						, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, BOARD_ID
						, A.UNIV_ID
						, HITS
						, ARTICLE_LIKES
						, ARTICLE_DISLIKES
			FROM 		ARTICLE A
						, MEMBER SM
						, ARTICLE_TYPE AT
			WHERE	    A.EMAIL = SM.EMAIL
			AND         A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND         A.BOARD_ID = ?
			AND         A.UNIV_ID = 1
			ORDER		BY	A.ARTICLE_ID DESC
		</showUnivArticle>

		
		<showSecretArticle>
        	SELECT		ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
						, ARTICLE_DISLIKES
						, ARTICLE_SCRAB
			FROM 		ARTICLE A
						, MEMBER SM
						, ARTICLE_TYPE AT
			WHERE	    A.EMAIL = SM.EMAIL
			AND         A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND         A.BOARD_ID = 4
			ORDER		BY	A.ARTICLE_ID DESC
		</showSecretArticle>
		<doWriteMajorArticle>
			INSERT INTO 	ARTICLE (
  										 ARTICLE_ID
  										 , ARTICLE_TITLE
  										 , ARTICLE_DESC
  										 , ARTICLE_REGISTER_DATE
  										 , ARTICLE_MODIFY_DATE
  										 , ARTICLE_TYPE_ID
  										 , EMAIL
  										 , BOARD_ID
  										 , MAJOR_GROUP_ID
  									)	 
			VALUES 					( 
										ARTICLE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, SYSDATE
										, SYSDATE
										, ?
										, ?
										, ?
										, ?
									)
		</doWriteMajorArticle>
		<doWriteUnivArticle>
			INSERT INTO 	ARTICLE (
  										 ARTICLE_ID
  										 , ARTICLE_TITLE
  										 , ARTICLE_DESC
  										 , ARTICLE_REGISTER_DATE
  										 , ARTICLE_MODIFY_DATE
  										 , ARTICLE_TYPE_ID
  										 , EMAIL
  										 , BOARD_ID
  										 , UNIV_ID
  									)	 
			VALUES 					( 
										ARTICLE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, SYSDATE
										, SYSDATE
										, ?
										, ?
										, ?
										, ?
									)
		</doWriteUnivArticle>
		<hitsCount>
			UPDATE	ARTICLE
			SET		HITS = HITS + 1
			WHERE	ARTICLE_ID = ?
		</hitsCount>
		
		
		<showMyWriteArticle>
			SELECT	ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, M.NICK_NAME
						, BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
			FROM	ARTICLE A
                    , MEMBER M
                    , ARTICLE_TYPE AT
			WHERE	A.EMAIL = M.EMAIL
			AND     A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND		M.EMAIL = ?
			ORDER	BY	A.ARTICLE_ID DESC
		</showMyWriteArticle>
		
		<showLikesArticle>
			SELECT	AL.ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, AL.BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
			FROM	ARTICLE A
					, MEMBER SM
					, ARTICLE_LIKE AL 
					, ARTICLE_TYPE AT
			WHERE	A.ARTICLE_ID = AL.ARTICLE_ID
			AND		A.EMAIL = SM.EMAIL
			AND     A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND 	AL.EMAIL = ?
		</showLikesArticle>
		
		<showMyScrabArticle>
			SELECT	AB.ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, AB.BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
			FROM	ARTICLE A
					, MEMBER SM
					, ARTICLE_SCRAB AB
					, ARTICLE_TYPE AT
			WHERE	A.ARTICLE_ID = AB.ARTICLE_ID
			AND		A.EMAIL = SM.EMAIL
			AND     A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND		AB.EMAIL = ?
		</showMyScrabArticle>
		
		<getArticleId>
			SELECT ARTICLE_ID
			FROM    ARTICLE
			WHERE   ROWNUM = 1
			ORDER   BY ARTICLE_ID DESC
		</getArticleId>
		<showDetail>
			SELECT		ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, BOARD_ID
						, A.MAJOR_GROUP_ID
						, A.UNIV_ID
						, HITS
						, ARTICLE_LIKES
			FROM 		ARTICLE A
						, MEMBER SM
						, ARTICLE_TYPE AT
			WHERE	    A.EMAIL = SM.EMAIL
			AND         A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND         A.ARTICLE_ID = ?
		</showDetail>
		
		<showTopArticle>
        	SELECT		ARTICLE_ID
        				, ARTICLE_TITLE
						, ARTICLE_DESC
						, ARTICLE_MODIFY_DATE
						, AT.ARTICLE_TYPE_NAME
						, SM.NICK_NAME
						, BOARD_ID
						, A.MAJOR_GROUP_ID
						, HITS
						, ARTICLE_LIKES
						, ARTICLE_DISLIKES
						, ARTICLE_SCRAB
			FROM 		ARTICLE A
						, MEMBER SM
						, ARTICLE_TYPE AT
			WHERE	    A.EMAIL = SM.EMAIL
			AND         A.ARTICLE_TYPE_ID = AT.ARTICLE_TYPE_ID
			AND         A.BOARD_ID = 4
			AND         ROWNUM = 1
			ORDER		BY	HITS DESC,
                        ARTICLE_MODIFY_DATE DESC
		</showTopArticle>
	</article>
	<articleLikes>
		<showArticleLike>
			SELECT 		ARTICLE_LIKE_ID
						, ARTICLE_ID
						, EMAIL
						, LIKE_DATE
						, BOARD_ID
			FROM 		ARTICLE_LIKE
			WHERE		EMAIL = ?
			AND			BOARD_ID = ?
		</showArticleLike>
		<selectLikeCount>
			SELECT	COUNT(ARTICLE_LIKE_ID)
			FROM	ARTICLE_LIKE
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
		</selectLikeCount>
		<deleteLike>
			DELETE
			FROM	ARTICLE_LIKE
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
		</deleteLike>
		<insertLike>
			INSERT INTO			ARTICLE_LIKE (
   										ARTICLE_LIKE_ID
   										, ARTICLE_ID
   										, EMAIL
   										, LIKE_DATE
   										, BOARD_ID
   									) 
			VALUES 					( 
										ARTICLE_LIKE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, SYSDATE
										, ?
									)
		</insertLike>
	</articleLikes>

	<stdMember>
		<addStdMember>
			INSERT INTO MEMBER (
									   EMAIL_ID
									   , UNIV_ID
									   , MAJOR_ID
									   , SIGNUP_DATE
									   , SECOND_EMAIL
									   , RANK_MODIFY_DATE
									   , PASSWORD
									   , MAJOR_GROUP_ID
								) 
			VALUES 				( 
										?
										, ?
										, ?
										, SYSDATE
									 	, ?
										, SYSDATE
										, ?
										, ?
								)
		</addStdMember>
		
		<updateMemberInfo>
			UPDATE	MEMBER
			SET		SECOND_EMAIL = ?
					, NICK_NAME = ?
			WHERE	EMAIL = ?
		</updateMemberInfo>
		
		<updateMemberPassword>
			UPDATE	MEMBER
			SET		PASSWORD = ?
			WHERE	EMAIL = ?
		</updateMemberPassword>
		
	</stdMember>
	
	<compMember>
		<addCompMember>
			INSERT INTO MEMBER (
									   EMAIL_ID
									   , MEMBER_TYPE_ID
									   , SIGNUP_DATE
									   , SECOND_EMAIL
									   , RANK_MODIFY_DATE
									   , PASSWORD
									   , PHONE_NUMBER
									   , COMPANY_NAME
								) 
			VALUES 				( 
										?
										, ?
										, SYSDATE
									 	, ?
										, SYSDATE
										, ?
										, ?
										, ?
								)
		</addCompMember>
	</compMember>
	
	<qa>
		<registerQuestion>
			INSERT INTO CURTAIN.QA	(
										QUESTION_ID
										, QUESTION_TITLE
										, QUESTION_DESCRIPTION
										, ANSWER_DESCRIPTION
										, QUESTION_DATE
										, ANSWER_DATE
										, EMAIL
										, IS_CHECKED
									) 
			VALUES					(
										QUESTION_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ''
										, SYSDATE
										, ''
										, ?
										, 'N'
									)
		</registerQuestion>
		
		<getMyQuestionsByEmail>
			SELECT	*
			FROM	CURTAIN.QA
			WHERE	EMAIL = ?
			ORDER	BY IS_CHECKED 
					, QUESTION_DATE DESC
		</getMyQuestionsByEmail>
		
		<setIsCheckedByQuestionId>
			UPDATE	QA
			SET		IS_CHECKED = 'Y'
			WHERE	QUESTION_ID = ?
			AND		ANSWER_DESCRIPTION IS NOT NULL
		</setIsCheckedByQuestionId>
		
		<getMyQuestionByQuestionId>
			SELECT	*
			FROM	CURTAIN.QA
			WHERE	QUESTION_ID = ?
		</getMyQuestionByQuestionId>
	</qa>
	
	<member>
		<getMemberInfo>
			SELECT	*
			FROM	MEMBER
			WHERE	EMAIL = ?
			AND		PASSWORD = ?
		</getMemberInfo>
		
		<getUnivName>
			SELECT  DISTINCT UNIV_NAME
			FROM    MEMBER M
        			, UNIV U
			WHERE   M.UNIV_ID = U.UNIV_ID
			AND     M.UNIV_ID = ?   
		</getUnivName>
		
		<getMajorName>
			SELECT  DISTINCT MAJOR_NAME
			FROM    MEMBER M
			        , MAJOR J
			WHERE   M.MAJOR_ID = J.MAJOR_ID
			AND     M.MAJOR_ID = ?
		</getMajorName>
		
		<getMajorGroupName>
			SELECT  MAJOR_GROUP_NAME
			FROM    MAJOR_GROUP
			WHERE   MAJOR_GROUP_ID = ?
		</getMajorGroupName>
		
		<getMemberRank>
			SELECT	MEMBER_RANK
			FROM	MEMBER_TYPE
			WHERE	MEMBER_TYPE_ID = ?
		</getMemberRank>
		
		
		
	</member>
	
	<file>
		<insertOneFile>
					INSERT INTO FILES (
                       FILE_ID
                       , ARTICLE_ID
                       , FILE_NAME
                       , FILE_LOCATION
                       ) 
			VALUES ( 
					FILE_ID_SEQ.NEXTVAL
			         , ?
			         , ?
			         , ?       
			       )
		</insertOneFile>
	</file>
	
	<dislike>
		<selectDislikeCount>
			SELECT	COUNT(ARTICLE_DISLIKE_ID)
			FROM	ARTICLE_DISLIKE
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
			AND		BOARD_ID = ?
		</selectDislikeCount>
		
		<deleteDislike>
			DELETE
			FROM	ARTICLE_DISLIKE
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
			AND		BOARD_ID = ?
		</deleteDislike>
		
		<insertDislike>
			INSERT INTO ARTICLE_DISLIKE (
										   ARTICLE_DISLIKE_ID
										   , ARTICLE_ID
										   , EMAIL
										   , DISLIKE_DATE
										   , BOARD_ID
									  ) 
			VALUES 			 ( 
										ARTICLE_DISLIKE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, SYSDATE
										, ?
							 )
		</insertDislike>
		<showArticleDisLike>
			SELECT 		ARTICLE_DISLIKE_ID
						, ARTICLE_ID
						, EMAIL
						, DISLIKE_DATE
						, BOARD_ID
			FROM 		ARTICLE_DISLIKE
			WHERE		EMAIL = ?
			AND			BOARD_ID = ?
		</showArticleDisLike>
		
		<minusDislikeCount>
			UPDATE	ARTICLE
			SET		ARTICLE_DISLIKES = ARTICLE_DISLIKES - 1
			WHERE	ARTICLE_ID = ?
		</minusDislikeCount>
		
		<plusDislikeCount>
			UPDATE	ARTICLE
			SET		ARTICLE_DISLIKES = ARTICLE_DISLIKES + 1
			WHERE	ARTICLE_ID = ?
		</plusDislikeCount>
	</dislike>
	
	<reply>
		<insertReply>
			INSERT INTO 	REPLY (
   										REPLY_ID
   										, ARTICLE_ID
   										, EMAIL
   										, REPLY_DESC
   										, BOARD_ID
   										, PARENT_REPLY_ID
   										, REPLY_ORDER
   										, REPLY_REGISTER_DATE
   										, REPLY_MODIFY_DATE
   									) 
			VALUES 					( 
										REPLY_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
										, ?
										, REPLY_ID_SEQ.CURRVAL
										, 0
										, SYSDATE
										, SYSDATE
									)
		</insertReply>
		<getReplyListByArticleId>
			SELECT	REPLY_ID
			 		, ARTICLE_ID
			 		, M.EMAIL
			 		, M.NICK_NAME
			 		, REPLY_DESC
			 		, PARENT_REPLY_ID
			 		, REPLY_ORDER
			FROM 	REPLY R
					, MEMBER M
			WHERE	R.EMAIL = M.EMAIL
			AND		R.ARTICLE_ID = ?
			ORDER	BY PARENT_REPLY_ID ASC
					, REPLY_ORDER ASC
		</getReplyListByArticleId>
		<selectCountParentReplyID>
			SELECT	COUNT(REPLY_ID)
			FROM	REPLY
			WHERE	PARENT_REPLY_ID = ?
		</selectCountParentReplyID>
		<selectMaxOrderNoByParentReplyId>
			SELECT 	MAX(REPLY_ORDER)
			FROM	REPLY
			WHERE   PARENT_REPLY_ID = ?
			ORDER	BY REPLY_ORDER DESC
		</selectMaxOrderNoByParentReplyId>
		<selectLatestOrderNoByParentReplyId>
			SELECT	REPLY_ORDER
			FROM	REPLY 
			WHERE	REPLY_ID = ?
		</selectLatestOrderNoByParentReplyId>
		<updateOrderNoByGroupId>
			UPDATE	REPLY
			SET		REPLY_ORDER = REPLY_ORDER + 1
			WHERE	REPLY_ORDER >= ?
			AND		PARENT_REPLY_ID = ?
		</updateOrderNoByGroupId>
		<insertReReply>
			INSERT INTO 	REPLY (
   										REPLY_ID
   										, ARTICLE_ID
   										, EMAIL
   										, REPLY_DESC
   										, BOARD_ID
   										, PARENT_REPLY_ID
   										, REPLY_ORDER
   										, REPLY_REGISTER_DATE
   										, REPLY_MODIFY_DATE
   									) 
			VALUES 					( 
										REPLY_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
										, ?
										, ?
										, ?
										, SYSDATE
										, SYSDATE
									)
		</insertReReply>
	</reply>
	
	<scrab>
		<selectScrabCount>
			SELECT	COUNT(ARTICLE_SCRAB_ID)
			FROM	ARTICLE_SCRAB
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
			AND		BOARD_ID = ?
		</selectScrabCount>
		
		<deleteScrab>
			DELETE
			FROM	ARTICLE_SCRAB
			WHERE	ARTICLE_ID = ?
			AND		EMAIL = ?
			AND		BOARD_ID = ?
		</deleteScrab>
		
		<insertScrab>
		INSERT INTO ARTICLE_SCRAB (
									   ARTICLE_SCRAB_ID
									   , ARTICLE_ID
									   , EMAIL
									   , SCRAB_DATE
									   , BOARD_ID
									   ) 
		VALUES 					( 
									ARTICLE_SCRAB_ID_SEQ.NEXTVAL
									, ?
									, ?
									, SYSDATE
									, ?
								)
		</insertScrab>
		<showArticleScrab>
			SELECT 		ARTICLE_SCRAB_ID
						, ARTICLE_ID
						, EMAIL
						, SCRAB_DATE
						, BOARD_ID
			FROM 		ARTICLE_SCRAB
			WHERE		EMAIL = ?
			AND			BOARD_ID = ?
		</showArticleScrab>
	</scrab>

</query>